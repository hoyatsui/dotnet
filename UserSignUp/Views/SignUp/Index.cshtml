

@model BusinessObjectsLayer.UserBO

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@



<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>SignUp</title>
    <script src="https://kit.fontawesome.com/ada9f89ebf.js" crossorigin="anonymous"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
    <style>
        body {
            background: linear-gradient(to bottom, #233b54 0%, #6f7479 100%);
        }

        .form-header {
            margin-bottom: 0;
        }

        .form-container {
            background: #fff;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0,0,0,0.15);
        }

            .form-container hr {
                border-top: 1px solid #ccc;
                margin-top: 0.5rem;
            }

            .form-container p {
                margin-bottom: 0.5rem;
            }

            .form-container img {
                width: 80px;
                height: 80px;
                border-radius: 50%;
                background-color: #808080;
                margin-top: 0;
            }

        .avatar-group {
            margin-bottom: 0.7rem;
        }

        .form-group {
            margin-bottom: 0.3rem;
        }
    </style>

    @*        <script>
            function preview(inputId, imgId) {
                var output = document.querySelector(imgId);
                var file = document.querySelector(inputId).files[0];
                var reader = new FileReader();
                if(file) {
                    reader.readAsDataURL(file);
                }
                reader.onloadend=()=>{
                    output.src=reader.result;
                }
            }
        </script>*@
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="form-container col-md-7">
                <div class="form-header d-flex justify-content-between">
                    <h5>Register as User</h5>
                    <i class="fa-regular fa-circle-xmark" style="font-size:24px; color:lightgrey;"></i>
                </div>
                <hr />

                <form id="signup-form" action="/SignUp/Index" method="post" enctype="multipart/form-data">
                    <div class="form-content">
                        @*
                            <div class="avatar-group row">
                                <div class="text-start col-md-5 offset-md-4">
                                    <p class="fw-bold">Image Preview</p>
                                    <img id="avatar" />
                                    <p class="fw-bold">Your Profile Pic</p>
                                    <input type="file" accept="image/*" name="ProfilePicture" id="img-upload"
                                           onchange="preview('#img-upload','#avatar')" required />
                                </div>
                            </div>*@

                        <div class="form-group row">
                            <label class="col-md-4 col-form-label text-md-right fw-bold">
                                UserName:
                            </label>
                            <div class="col-md-5 ">
                                <input class="form-control" name="UserName" type="text" placeholder="User Name" />
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-md-4 col-form-label text-md-right  fw-bold">
                                Email Address:
                            </label>
                            <div class="col-md-5 ">
                                <input class="form-control" name="EmailAddress" type="email" placeholder="Email Id" />
                                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-md-4 col-form-label text-md-right  fw-bold">
                                Password:
                            </label>
                            <div class="col-md-5 ">
                                <input class="form-control" name="Password" type="password" placeholder="Password" />
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-md-4 col-form-label text-md-right  fw-bold">
                                Confirm Password:
                            </label>
                            <div class="col-md-5 ">
                                <input class="form-control" name="ConfirmPassword" type="password" placeholder="Password" />
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>

                    <hr />
                    <div class="form-footer d-flex justify-content-end">
                        <button type="submit" value="Save" name="save" class="btn btn-primary">Sign up</button>
                    </div>

                </form>
            </div>
        </div>
    </div>
</body>

</html>

